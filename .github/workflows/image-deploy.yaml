name: image-deploy

on:
  push:
    branches:
      - main
      - master
    # paths:
    #   - app/**
    #   - Dockerfile
    #   - nginx.conf
    tags:
      - 'v*.*.*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@312f67c6629946ba17269558b63d0bd84a63caab

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@d398f07826957cd0a18ea1b059cf1207835e60bc
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@ee266832e57cb510bc6060ce5129df0529f119df
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@965c6a410d446a30e95d35052c67d6eded60dad6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Install Cosign
        if: ${{ github.event_name != 'pull_request' }}      
        uses: sigstore/cosign-installer@v2.0.0

      # - name: Write signing key to disk
      #   if: ${{ github.event_name != 'pull_request' }}      
      #   run: 'echo "$KEY" > cosign.key'
      #   shell: bash
      #   env:
      #     KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}

      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
        run: cosign sign --key env://COSIGN_PRIVATE_KEY  ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest